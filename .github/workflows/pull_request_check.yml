# # name: Pull Request Check


# # on:
# # #   push:
# # #       branches:
# # #         - 'ewa/*'
      
# #   pull_request:
# #     types:
# #       - opened
# #       - synchronize
# #       - closed

# # jobs:
# #   pr_check:
# #     runs-on: ubuntu-latest

# #     steps:
# # #       - name: git checkout
# # #         uses: actions/checkout@v3
# # #         with:
# # #           token: ${{ secrets.GITHUB_TOKEN }}

# # #       # https://github.com/marketplace/actions/github-pull-request-action
# # #       - name: create pull request
# # #         id: open-pr
# # #         uses: repo-sync/pull-request@v2
# # #         with:
# # #           github_token: ${{ secrets.GITHUB_TOKEN}}
# # #           destination_branch: ${{ github.event.repository.default_branch }}
# # #           pr_title: "[Automated] Merge ${{ github.ref_name }} into ${{ github.event.repository.default_branch }}"
# # #           pr_body: "Automated Pull Request"
# # #           pr_reviewer: "mewwaa"
# # #           pr_assignee: "mewwaa"

# # #       # https://github.com/marketplace/actions/enable-pull-request-automerge
# # #       - name: enable automerge
# # #         if: steps.open-pr.outputs.pr_number != ''
# # #         uses: peter-evans/enable-pull-request-automerge@v2
# # #         with:
# # #           token: ${{ secrets.GITHUB_TOKEN }}
# # #           pull-request-number: ${{ steps.open-pr.outputs.pr_number }}
# # #           merge-method: merge
# # #       - name: Merge pull requests (automerge-action)
# # #         uses: pascalgn/automerge-action@v0.15.6
# # # 

# #       - name: Checkout code
# #         uses: actions/checkout@v3

# #       - name: Validate PR
      
# #         run: |
# #           npm install
# #           npm run lint
          
# # #           automerge:
# # #                   - id: automerge
# # #                     name: automerge
# # #                     uses: "pascalgn/automerge-action@v0.15.6"
# # #                     env:
# # #                       GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

# # #       - name: Merge to default branch
# # #         if: github.event.pull_request.merged == true
# # #         run: |
# # #           # Merge the PR to the default branch (e.g., main or master)
# # #           git checkout ${{ github.event.repository.default_branch }}
# # #           git merge ${{ github.event.pull_request.head.ref }}



# name: Lint



# on:
#   push:
#     paths:
#       - '*.py'

# jobs:
#   flake8_py3:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Flake8 action
#         uses: suo/flake8-github-action@v1
        
#       - name: Setup Python
#         uses: actions/setup-python@v1
#         with:
#           python-version: 3.7.4
#           architecture: x64
#       - name: Checkout PyTorch
#         uses: actions/checkout@master
#       - name: Install flake8
#         run: pip install flake8
#       - name: Run flake8
#         uses: suo/flake8-github-action@releases/v1
#         with:
#           checkName: 'flake8_py3'   # NOTE: this needs to be the same as the job name
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



# name: Pylint

# on:
#   pull_request:
#     branches:
#       - main
#       - ewa
#       - test
#       - test2

# jobs:
#   build:
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3
      
#     - name: Set up Python
#       uses: actions/setup-python@v3
#       with:
#         python-version: 3.9
        
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install pylint
        
#     - name: Find Python files
#       id: find_files
#       run: |
#         find . -type f -name '*.py' -not -path './.git/*' -not -path './.github/*' > files.txt
        
#     - name: Run Pylint
#       id: run_pylint
#       run: |
#         cat files.txt | xargs pylint --exit-zero --score=n --load-plugins=pylint_junit --output-format=parseable
#         pylint_exit_code=$?
#         echo "::set-output name=pylint_exit_code::$pylint_exit_code"
        
#     - name: Merge pull request
#       if: ${{ steps.run_pylint.outputs.pylint_exit_code == 0 && github.event.pull_request.base.ref == 'main' }}
#       uses: repo-sync/pull-request@v2
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}
#         args: --merge
name: Linter

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Filter Python Files
        id: file-filter
        run: |
          python_files=$(find . -name "*.py")
          echo "::set-output name=python_files::$python_files"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Super-Linter
        uses: super-linter/super-linter@v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_PYTHON: true
        with:
          files: ${{ steps.file-filter.outputs.python_files }}
          




